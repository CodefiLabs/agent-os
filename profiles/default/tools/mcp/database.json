{
  "server_id": "sqlite",
  "description": "SQLite database access for querying and managing local database files",
  "command": "npx",
  "args": [
    "-y",
    "@modelcontextprotocol/server-sqlite",
    "--db-path",
    "/path/to/database.db"
  ],
  "env": {},
  "transport": "stdio",
  "install_command": "npm install -g @modelcontextprotocol/server-sqlite",
  "required_secrets": [],
  "capabilities": [
    "resources",
    "tools"
  ],
  "tags": [
    "database",
    "sqlite",
    "sql",
    "query"
  ],
  "documentation_url": "https://github.com/modelcontextprotocol/servers/tree/main/src/sqlite",
  "setup_instructions": "Replace '/path/to/database.db' in args with the actual path to your SQLite database file.",
  "security_note": "This server grants database access. Only specify databases you trust the AI to query and modify.",
  "alternatives": {
    "postgresql": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-postgres"],
      "env": {
        "POSTGRES_CONNECTION_STRING": "${POSTGRES_CONNECTION_STRING}"
      },
      "setup_instructions": "Set POSTGRES_CONNECTION_STRING in format: postgresql://user:password@host:port/database"
    },
    "mysql": {
      "command": "npx",
      "args": ["-y", "mcp-server-mysql"],
      "env": {
        "MYSQL_CONNECTION_STRING": "${MYSQL_CONNECTION_STRING}"
      },
      "setup_instructions": "Set MYSQL_CONNECTION_STRING in format: mysql://user:password@host:port/database"
    }
  }
}
